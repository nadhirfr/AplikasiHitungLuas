package vu.co.nadhir.hitung_luas;

import android.app.ActionBar;
import android.app.Fragment;
import android.app.FragmentTransaction;
import android.content.Intent;
import android.content.res.Configuration;
import android.os.Bundle;
import android.support.design.widget.TabLayout;
import android.support.v4.view.MenuItemCompat;
import android.support.v4.widget.DrawerLayout;
import android.support.v7.app.ActionBarDrawerToggle;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.internal.view.ActionBarPolicy;
import android.support.v7.widget.SearchView;
import android.support.v7.widget.ShareActionProvider;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.Toast;


public class MainActivity extends AppCompatActivity implements View.OnClickListener {
    private DrawerLayout mDrawerLayout;
    private ActionBarDrawerToggle mDrawerToggle;
    private Button leftButton;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        ActionBarPolicy.get(this).showsOverflowMenuButton();

        mDrawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);
        leftButton = (Button) findViewById(R.id.leftButton);
        //mainButton = (Button) findViewById(R.id.mainButton);

       mDrawerToggle = new ActionBarDrawerToggle(this, mDrawerLayout,
         R.string.drawer_open, R.string.drawer_close) {

           @Override
           public void onDrawerOpened(View drawerView) {
               Toast.makeText(MainActivity.this, "Drawer Opened",
                       Toast.LENGTH_SHORT).show();
           }

           @Override
           public void onDrawerClosed(View drawerView) {
               Toast.makeText(MainActivity.this, "Drawer Closed",
                       Toast.LENGTH_SHORT).show();
           }
       };

        mDrawerLayout.setDrawerListener(mDrawerToggle);

        leftButton.setOnClickListener(this);
        //mainButton.setOnClickListener(this);

        //mDrawerToggle.setHomeAsUpIndicator(R.drawable.ic_drawer);
        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
        getSupportActionBar().setElevation(0);
        getSupportActionBar().setHomeButtonEnabled(true);
        tabs();

    }


    protected class MyTabsListener implements ActionBar.TabListener{
        private Fragment fragment;

        public MyTabsListener(Fragment fragment){
            this.fragment = fragment;
        }
        @Override
        public void onTabSelected(ActionBar.Tab tab, FragmentTransaction ft) {
            Log.d("SimpleActionBarTabsActivity", "tab "
                    + String.valueOf(tab.getPosition()) + " clicked");

        }

        @Override
        public void onTabUnselected(ActionBar.Tab tab, FragmentTransaction ft) {
            Log.d("SimpleActionBarTabsActivity","tab "
                    + String.valueOf(tab.getPosition()) + " re-clicked");
        }

        @Override
        public void onTabReselected(ActionBar.Tab tab, FragmentTransaction ft) {
            Log.d("SimpleActionBarTabsActivity","tab "
                    + String.valueOf(tab.getPosition()) + " re-clicked");
        }
    }

    private void tabs(){

        TabLayout tabLayout = (TabLayout) findViewById(R.id.sliding_tabs);
        //tabLayout.setupWithViewPager(viewPager);
        tabLayout.addTab(tabLayout.newTab().setText("Tab 1"));
        tabLayout.addTab(tabLayout.newTab().setText("Tab 2"));
        tabLayout.addTab(tabLayout.newTab().setText("Tab 3"));
        tabLayout.addTab(tabLayout.newTab().setText("Tab 4"));



    }

    private ShareActionProvider mShareActionProvider;
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.

        getMenuInflater().inflate(R.menu.menu_main, menu);
        //Set up search menu
        MenuItem searchItem = menu.findItem(R.id.action_search);
        SearchView searchView = (SearchView) MenuItemCompat.getActionView(searchItem);

        // Set up ShareActionProvider's default share intent
        MenuItem shareItem = menu.findItem(R.id.action_share);
        mShareActionProvider = (ShareActionProvider)
                MenuItemCompat.getActionProvider(shareItem);
        mShareActionProvider.setShareIntent(getDefaultIntent());
        return true;
    }

    //controller share button actionbar
    private Intent getDefaultIntent() {
        Intent intent = new Intent(Intent.ACTION_SEND);
        intent.setType("image/*");
        return intent;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        //
        int id = item.getItemId();

        if (mDrawerToggle.onOptionsItemSelected(item)) {
            return true;
        }


        //noinspection SimplifiableIfStatement
        /*if (id == R.id.action_settings) {
            return true;
        }*/
        if (id == R.id.action_close) {
            this.finish();
            System.exit(id);
            return true;
            //return true;
        }

        return super.onOptionsItemSelected(item);
    }

    @Override
    protected void onPostCreate(Bundle savedInstanceState) {
        super.onPostCreate(savedInstanceState);
        mDrawerToggle.syncState();
    }
    @Override
    public void onConfigurationChanged(Configuration newConfig) {
        // TODO Auto-generated method stub
        super.onConfigurationChanged(newConfig);
        mDrawerToggle.onConfigurationChanged(newConfig);
    }

        @Override
    public void onClick(View v) {
        /*if (v == mainButton) {
            Toast.makeText(this, "Main Button", Toast.LENGTH_SHORT).show();
        } else*/
        if (v == leftButton) {
            Toast.makeText(this, "Left Button", Toast.LENGTH_SHORT).show();
        }
    }
}

